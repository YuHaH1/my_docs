// docs/.vuepress/config.ts
import { defineUserConfig } from "vuepress";
import { searchPlugin } from "@vuepress/plugin-search";

// docs/.vuepress/theme.config.ts
import { defaultTheme } from "vuepress";

// docs/.vuepress/utils/index.ts
import fs from "fs";
import path from "path";
import { exec } from "child_process";

// docs/.vuepress/utils/constant.ts
var SUBJECTS = {
  react: "react",
  vue: "vue",
  sass: "sass",
  ts: "typeScript",
  node: "node",
  js: "javaScript",
  docker: "docker",
  go: "golang",
  npm: "packageManager",
  vite: "vite",
  engineering: "FrontEndEngineering",
  ["\u8BA1\u7B97\u673A\u7F51\u7EDC"]: "ComputerNetwork",
  ["\u670D\u52A1\u5668"]: "Server",
  linux: "linux",
  shell: "shell",
  css: "css",
  canvas: "canvas",
  utils: {
    node: "nodeDependency",
    vuepress: "vuepress"
  },
  optimize: "optimize",
  English: "English",
  git: "Git",
  browser: "Browser",
  project: "Project",
  algorithms: "Algorithms",
  os: "OS",
  specialEffects: "specialEffects",
  web3: "web3",
  reg: "reg"
};
var Notes_Sidebar_Setting = [
  [SUBJECTS.go, "golang.md"],
  [SUBJECTS.react, "fiber.md", "diff.md", "\u57FA\u7840.md", "React\u72B6\u6001\u7BA1\u7406.md"],
  [SUBJECTS.vue, "diff.md", "vueRouter.md", "vue3.3\u7248\u672C.md", "pinia.md", "\u54CD\u5E94\u5F0F\u539F\u7406.md", "\u7F16\u8BD1\u539F\u7406.md", "vue-loader\u521D\u63A2.md", "Vue3\u5F02\u6B65\u66F4\u65B0.md", "Vue\u5185\u7F6E\u7EC4\u4EF6.md", "Vue\u751F\u547D\u5468\u671F.md"],
  [SUBJECTS.sass, "grammar.md"],
  [SUBJECTS.ts, "grammar.md", "\u7C7B\u578B\u4F53\u64CD.md"],
  [SUBJECTS.node, "node\u57FA\u7840\u77E5\u8BC6.md", "common_apis.md", "pm2.md", "sequelize.md"],
  [SUBJECTS.js, "\u5FC5\u4F1AAPIs.md", "js\u8FDB\u9636.md", "\u8BBE\u8BA1\u6A21\u5F0F.md"],
  [SUBJECTS.docker, "docker\u57FA\u7840\u77E5\u8BC6.md"],
  [SUBJECTS.linux, "linux\u5E38\u7528\u6307\u4EE4.md", "shell\u811A\u672C.md"],
  [SUBJECTS.css, "\u4F60\u4E0D\u77E5\u9053\u7684css.md"],
  [SUBJECTS.canvas, "canvas\u57FA\u7840.md"],
  [
    SUBJECTS.engineering,
    "webpack\u642D\u5EFAVue3ts.md",
    "vite\u5FC5\u61C2\u77E5\u8BC6.md",
    "webpack\u5FC5\u61C2\u77E5\u8BC6.md",
    "Vite\u63D2\u4EF6\u5F00\u53D1.md",
    "packageJson\u6587\u4EF6.md",
    "\u5305\u7BA1\u7406\u5668\u7684\u76F8\u5173\u77E5\u8BC6.md",
    "\u5FAE\u524D\u7AEF.md",
    "\u9879\u76EE\u521D\u59CB\u5316.md",
    "rollup.md",
    "\u5355\u5143\u6D4B\u8BD5.md",
    "\u8DE8\u7AEF\u5F00\u53D1.md"
  ],
  [SUBJECTS.optimize, "\u6027\u80FD\u4F18\u5316.md"],
  [SUBJECTS.git, "Git\u57FA\u7840.md"],
  [SUBJECTS.English, "\u82F1\u8BED\u5355\u8BCD.md"],
  [SUBJECTS.browser, "\u6D4F\u89C8\u5668\u5FC5\u5907\u77E5\u8BC6.md"],
  [SUBJECTS.algorithms, "\u7B97\u6CD5.md", "\u6570\u636E\u7ED3\u6784.md"],
  [SUBJECTS["\u670D\u52A1\u5668"], "Nginx.md"],
  [SUBJECTS.web3, "Web3.md"],
  [SUBJECTS.reg, "\u6B63\u5219\u8868\u8FBE\u5F0F.md"]
];
var Interview_Sidebar_Setting = [
  [SUBJECTS.node, "node\u9762\u7ECF.md"],
  [SUBJECTS["\u8BA1\u7B97\u673A\u7F51\u7EDC"], "\u8BA1\u7B97\u673A\u7F51\u7EDC.md"],
  [SUBJECTS.js, "js\u9762\u7ECF.md"],
  [SUBJECTS.css, "css\u9762\u7ECF.md"],
  [SUBJECTS.vue, "Vue\u9762\u7ECF.md"],
  [SUBJECTS.browser, "\u6D4F\u89C8\u5668\u76F8\u5173\u9762\u7ECF.md"],
  [SUBJECTS.os, "\u64CD\u4F5C\u7CFB\u7EDF.md"]
];
var Problems_Sidebar_Setting = [
  [SUBJECTS.node, "pm2.md"],
  [SUBJECTS["\u670D\u52A1\u5668"], "\u670D\u52A1\u5668.md"],
  [SUBJECTS.js, "\u57CB\u70B9.md", "js\u4E2D\u9047\u5230\u7684\u95EE\u9898.md"],
  [SUBJECTS.project, "\u9879\u76EE\u4E2D\u5F97\u5230\u7684\u95EE\u9898.md"],
  [SUBJECTS.css, "CSS\u76F8\u5173\u95EE\u9898.md"]
];
var Utils_Sidebar_Setting = [
  [SUBJECTS.utils.vuepress, "Vuepress\u63D2\u4EF6.md"],
  [SUBJECTS.utils.node, "\u597D\u7528\u7684\u4F9D\u8D56\u5DE5\u5177\u5305.md"],
  [SUBJECTS.specialEffects, "js\u5B9E\u73B0\u6548\u679C.md"]
];
var my_typora_path = "D:\\typora\u5B89\u88C5\\Typora\\Typora.exe";
var Problems_navbar_Setting = [
  SUBJECTS["\u670D\u52A1\u5668"],
  SUBJECTS.js,
  SUBJECTS.project,
  SUBJECTS.node,
  SUBJECTS.css
];
var Interview_navbar_Setting = [
  SUBJECTS.node,
  SUBJECTS["\u8BA1\u7B97\u673A\u7F51\u7EDC"],
  SUBJECTS.js,
  SUBJECTS.css,
  SUBJECTS.vue,
  SUBJECTS.browser,
  SUBJECTS.os
];
var Utils_navbar_Setting = [
  SUBJECTS.utils.vuepress,
  SUBJECTS.utils.node,
  SUBJECTS.specialEffects
];
var Notes_navbar_Setting = [
  SUBJECTS.react,
  SUBJECTS.vue,
  SUBJECTS.sass,
  SUBJECTS.ts,
  SUBJECTS.node,
  SUBJECTS.js,
  SUBJECTS.docker,
  SUBJECTS.linux,
  SUBJECTS.css,
  SUBJECTS.canvas,
  SUBJECTS.engineering,
  SUBJECTS.optimize,
  SUBJECTS.English,
  SUBJECTS.git,
  SUBJECTS.browser,
  SUBJECTS.algorithms,
  SUBJECTS["\u670D\u52A1\u5668"],
  SUBJECTS.go,
  SUBJECTS.web3
];

// docs/.vuepress/utils/index.ts
var __vite_injected_original_dirname = "E:/360MoveData/Users/YR/Desktop/\u524D\u7AEF\u5FC5\u4F1A\u624B\u5199\u9898/my_docs/docs/.vuepress/utils";
var create_navbar_md = (lib_array, dir_name, text) => {
  lib_array.forEach((lib) => {
    const file_name = lib.split(".")[0];
    const upStringFileName = file_name[0].toUpperCase() + file_name.substring(1);
    const dir = path.resolve(__vite_injected_original_dirname, `../../${dir_name}`, upStringFileName);
    const dir_exist = fs.existsSync(dir);
    if (!dir_exist) {
      fs.mkdir(dir, (err) => {
        if (err) {
          console.log("\u521B\u5EFA\u6587\u4EF6\u5931\u8D25", dir);
        }
      });
    }
  });
  const children = lib_array.map((lib) => {
    const file_name = lib.split(".")[0];
    const upStringFileName = file_name[0].toUpperCase() + file_name.substring(1);
    const dirs = fs.readdirSync(path.resolve(__vite_injected_original_dirname, `../../${dir_name}/${upStringFileName}`));
    let md_file = dirs.filter((v) => v !== lib);
    md_file = md_file.length > 0 ? md_file[md_file.length - 1] : [];
    return {
      text: upStringFileName,
      link: `/${dir_name}/${upStringFileName}/${md_file}`
    };
  });
  const nav_bar = {
    text,
    children
  };
  return nav_bar;
};
var create_sidebar_md = (lib_array, dir_name) => {
  const sidebar2 = lib_array.map((lib) => {
    const file_name = lib.shift();
    const upStringFileName = file_name[0].toUpperCase() + file_name.substring(1);
    const intergrate_dir_name = dir_name + upStringFileName + "/";
    const sidebar_obj = {};
    lib.forEach((v) => {
      const file = path.resolve(__vite_injected_original_dirname, `../../${intergrate_dir_name + v}`);
      const is_exist = fs.existsSync(file);
      const framatterString = "---\nlang: zh-CN\ntitle: " + v.split(".")[0] + "\ndescription: \u5173\u952E\u529F\u80FD\ncollapsible: true\n---\n# " + v.split(".")[0] + "\n<CommentService/>";
      if (!is_exist) {
        try {
          fs.appendFile(file, framatterString, (err) => {
            if (err)
              throw err;
            console.log('The "data to append" was appended to file!');
            exec_typora(file);
          });
        } catch (error) {
          console.log(error);
        }
      }
    });
    sidebar_obj[intergrate_dir_name] = [
      {
        text: upStringFileName,
        collapsible: true,
        children: lib.map((v) => intergrate_dir_name + v)
      }
    ];
    return sidebar_obj;
  });
  return sidebar2;
};
var exec_typora = (md_file) => {
  if (process.env.NODE_ENV === "production" || !my_typora_path) {
    return;
  }
  const typora_path = path.normalize(my_typora_path);
  if (!fs.existsSync(typora_path)) {
    return;
  }
  md_file = path.normalize(md_file);
  exec(`${typora_path} ${md_file} `, (err, stdout, stderr) => {
    if (err) {
      console.error(err);
      return;
    }
    console.log(stdout);
  });
};

// docs/.vuepress/sidebar.ts
var Notes_sidebar = create_sidebar_md(Notes_Sidebar_Setting, "/Notes/");
var Interview_sidebar = create_sidebar_md(Interview_Sidebar_Setting, "/Interview/");
var Problems_sidebar = create_sidebar_md(Problems_Sidebar_Setting, "/Problems/");
var Utils_sidebar = create_sidebar_md(Utils_Sidebar_Setting, "/Utils/");
var sidebar_all = [...Notes_sidebar, ...Interview_sidebar, ...Problems_sidebar, ...Utils_sidebar];
var sidebar = {};
for (let value of sidebar_all) {
  const keys = Object.keys(value);
  sidebar[keys[0]] = value[keys[0]];
}
var sidebar_default = {
  ...sidebar
};

// docs/.vuepress/navbar.ts
var navbar_default = [
  create_navbar_md(Notes_navbar_Setting, "Notes", "\u7B14\u8BB0\u67E5\u8BE2"),
  create_navbar_md(Problems_navbar_Setting, "Problems", "\u95EE\u9898\u8BB0\u5F55"),
  create_navbar_md(Interview_navbar_Setting, "Interview", "\u9762\u7ECF"),
  create_navbar_md(Utils_navbar_Setting, "Utils", "\u4E0D\u9519\u7684\u5DE5\u5177"),
  {
    text: "\u4E2A\u4EBA\u4FE1\u606F",
    children: [
      {
        text: "github",
        link: "https://github.com/YuHaH1"
      },
      {
        text: "CSDN",
        link: "https://blog.csdn.net/m0_47195133?type=blog"
      }
    ]
  }
];

// docs/.vuepress/theme.config.ts
var theme_config_default = defaultTheme({
  lastUpdated: true,
  lastUpdatedText: "\u6700\u8FD1\u66F4\u65B0\u65F6\u95F4",
  sidebar: sidebar_default,
  logo: "/logo.png",
  navbar: navbar_default
});

// docs/.vuepress/config.ts
import path2 from "path";
import { commentPlugin } from "vuepress-plugin-comment2";
import katex from "markdown-it-katex";
var __vite_injected_original_dirname2 = "E:/360MoveData/Users/YR/Desktop/\u524D\u7AEF\u5FC5\u4F1A\u624B\u5199\u9898/my_docs/docs/.vuepress";
var config_default = defineUserConfig({
  lang: "zh-CN",
  title: "fancy\u2014\u2014Blog",
  theme: theme_config_default,
  head: [
    // 设置 favor.ico，.vuepress/public 下
    [
      "link",
      { rel: "icon", href: "/hero.jpg" }
    ],
    ["link", { rel: "stylesheet", href: "https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.7.1/katex.min.css" }],
    ["link", { rel: "stylesheet", href: "https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/2.10.0/github-markdown.min.css" }]
  ],
  public: `${path2.resolve(__vite_injected_original_dirname2, "./public")}`,
  plugins: [
    commentPlugin({
      // your options
      provider: "Giscus",
      comment: true,
      //启用评论功能
      repo: "YuHaH1/my_docs",
      repoId: "R_kgDOJhp_Ig",
      category: "Announcements",
      categoryId: "DIC_kwDOJhp_Is4CWaUE",
      mapping: "title"
    }),
    searchPlugin({
      locales: {
        "/": {
          placeholder: "\u641C\u7D22\u5173\u952E\u8BCD"
        },
        "/zh/": {
          placeholder: "\u641C\u7D22"
        }
      }
    })
  ],
  extendsMarkdown(md) {
    md.set({ html: true });
    md.use(katex);
  }
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
